<launch>

  <arg name="map_yaml" default="/home/hello-robot/stretch_user/maps/empty.yaml"               doc="filepath to previously captured map (required)" />


  <!-- STRETCH DRIVER -->
  <!-- <param name="/stretch_driver/broadcast_odom_tf" type="bool" value="true"/>
  <param name="/stretch_driver/mode" type="string" value="navigation" />
  <include file="$(find stretch_core)/launch/stretch_driver.launch" pass_all_args="true"/> -->

  <!-- RPLIDAR A1 -->
  <!-- <node name="lidar_node" pkg="rplidar_ros" type="rplidarNode" output="screen"> -->
  <node name="lidar_node" pkg="rplidar_ros" type="rplidarNode">
    <param name="serial_port"         type="string" value="/dev/hello-lrf"/>
    <param name="serial_baudrate"     type="int"    value="115200"/> 
    <param name="frame_id"            type="string" value="laser"/>
    <param name="inverted"            type="bool"   value="false"/>
    <param name="angle_compensate"    type="bool"   value="true"/>
    <param name="scan_mode"           type="string" value="Boost"/>
  </node>


  <node pkg="laser_filters" type="scan_to_cloud_filter_chain"
      name="laser_to_cloud_filter">
    <rosparam ns="scan_filter_chain">

        - name: box1
          type: laser_filters/LaserScanBoxFilter
          params:
            box_frame: base_link
            min_x: -15
            max_x: 15
            min_y: 0
            max_y: 15
            min_z: -10
            max_z: 10

        - name: box2
          type: laser_filters/LaserScanBoxFilter
          params:
            box_frame: base_link
            min_x: -15
            max_x: 15
            min_y: -15
            max_y: -1
            min_z: -10
            max_z: 10

        - name: box3
          type: laser_filters/LaserScanBoxFilter
          params:
            box_frame: base_link
            min_x: -15
            max_x: 0
            min_y: -15
            max_y: 15
            min_z: -10
            max_z: 10

        - name: box4
          type: laser_filters/LaserScanBoxFilter
          params:
            box_frame: base_link
            min_x: 4
            max_x: 15
            min_y: -20
            max_y: 20
            min_z: -10
            max_z: 10


        - name: shadows
          type: laser_filters/ScanShadowsFilter
          params:
            min_angle: 10
            max_angle: 170
            neighbors: 20
            window: 1


    </rosparam>

    
    <remap from="scan_filtered" to="filtered_box_laser" />
    <param name="high_fidelity" value="true" />
    <param name="target_frame" type="string" value="base_link" />
    <remap from="cloud_filtered" to="laser_cloud_baselink" />

  </node>


  <!--
      "lidar supported modes
      Standard: max_distance: 12.0 m, Point number: 2.0K
      Express: max_distance: 12.0 m, Point number: 4.0K
      Boost: max_distance: 12.0 m, Point number: 8.0K"
  -->

  <!-- MAP SERVER -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_yaml)" />

  <!-- LOCALIZATION -->
  <include file="$(find amcl)/examples/amcl_diff.launch" />

  <!-- NAVIGATION -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find ifa_teamg)/config/common_costmap_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find ifa_teamg)/config/common_costmap_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find ifa_teamg)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find ifa_teamg)/config/global_costmap_params_withmap.yaml" command="load" />
    <rosparam file="$(find ifa_teamg)/config/custom_config/base_local_planner_params.yaml" command="load" />
    <remap from="/cmd_vel" to="/stretch/cmd_vel" />
  </node>

  <!-- Pot Detection Node -->
  <!-- <node name="lidar_pot_detector" pkg="ifa_teamg" type="lidar_pot_detector" output="screen" args=''/> -->
  <node name="lidar_pot_detector" pkg="ifa_teamg" type="lidar_pot_detector" args=''/>
  <!-- -->

  <!-- Waypoint Selector and Publisher -->
  node name="waypoint_publisher" pkg="ifa_teamg" type="waypoint_publisher_accumulator" output="screen" args=''
  <!-- -->

  <!-- <include file="$(find realsense2_camera)/launch/rs_camera.launch" >
  <arg name="camera" value="head_camera" />
  <arg name="serial_no" value="033422070537" />
  </include>

  <include file="$(find aruco_ros)/launch/stretch_nav_aruco.launch" /> -->

</launch>

